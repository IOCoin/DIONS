# Copyright (c) 2009-2010 Satoshi Nakamoto
# Distributed under the MIT/X11 software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

CC=x86_64-w64-mingw32-gcc -Wl,-Bstatic
CXX=x86_64-w64-mingw32-g++ -Wl,-Bstatic

USE_UPNP:=0

CROSS_BUILD=/home/io-tester/CROSS_COMPILE/
INCLUDEPATHS= \
 -I"$(CROSS_BUILD)/x86_64-w64-mingw32/boost_1_55_0/include" \
 -I"$(CROSS_BUILD)/x86_64-w64-mingw32/db-4.8/include" \
 -I"$(CROSS_BUILD)/x86_64-w64-mingw32/openssl-1.0/include/"

LIBPATHS= \
 -L"$(CROSS_BUILD)/x86_64-w64-mingw32/boost_1_55_0/lib" \
 -L"$(CROSS_BUILD)/x86_64-w64-mingw32/db-4.8/lib" \
 -L"$(CROSS_BUILD)/x86_64-w64-mingw32/openssl-1.0/lib/" \
 -L/usr/x86_64-w64-mingw32/lib

LIBS= \
 -l boost_system-mt-s \
 -l boost_filesystem-mt-s \
 -l boost_program_options-mt-s \
 -l boost_thread_win32-mt-s \
 -l boost_chrono-mt-s \
 -l db_cxx \
 -l boost_iostreams-mt-s \
 -l boost_zlib-mt-s \
 -l ssl \
 -l crypto

DEFS=-DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -DBOOST_SPIRIT_THREADSAFE
DEBUGFLAGS=-g
CFLAGS=-mthreads -O3 -msse2 -w -Wall -Wextra -Wno-ignored-qualifiers -Wformat -Wformat-security -Wno-unused-parameter $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)
LDFLAGS=-Wl,--dynamicbase -Wl,--nxcompat

TESTDEFS = -DTEST_DATA_DIR=$(abspath test/data)

ifndef USE_UPNP
	override USE_UPNP = -
endif
ifneq (${USE_UPNP}, -)
 INCLUDEPATHS += -I"$(CROSS_BUILD)/miniupnpc-1.9.20140610/"
 LIBPATHS += -L"$(CROSS_BUILD)/miniupnpc-1.9.20140610/"
 LIBS += -l miniupnpc -l iphlpapi
 DEFS += -DSTATICLIB -DUSE_UPNP=$(USE_UPNP)
endif

LIBS += -l kernel32 -l user32 -l gdi32 -l comdlg32 -l winspool -l winmm -l shell32 -l comctl32 -l ole32 -l oleaut32 -l uuid -l rpcrt4 -l advapi32 -l ws2_32 -l mswsock -l shlwapi

# TODO: make the mingw builds smarter about dependencies, like the linux/osx builds are
HEADERS = $(wildcard *.h)

OBJS= \
    obj/alert.o \
    obj/version.o \
    obj/checkpoints.o \
    obj/netbase.o \
    obj/addrman.o \
    obj/crypter.o \
    obj/key.o \
    obj/db.o \
    obj/init.o \
    obj/irc.o \
    obj/keystore.o \
    obj/main.o \
    obj/state.o \
    obj/dions.o \
    obj/miner.o \
    obj/net.o \
    obj/protocol.o \
    obj/bitcoinrpc.o \
    obj/rpcdump.o \
    obj/rpcnet.o \
    obj/rpcmining.o \
    obj/rpcwallet.o \
    obj/rpcblockchain.o \
    obj/rpcrawtransaction.o \
    obj/script.o \
    obj/sync.o \
    obj/util.o \
    obj/wallet.o \
    obj/walletdb.o \
    obj/noui.o \
    obj/cubehash.o \
    obj/luffa.o \
    obj/aes_helper.o \
    obj/echo.o \
    obj/shavite.o \
    obj/simd.o \
    obj/blake.o\
    obj/bmw.o\
    obj/groestl.o\
    obj/jh.o\
    obj/keccak.o\
    obj/skein.o \
    obj/kernel.o \
    obj/pbkdf2.o \
    obj/zerocoin/Accumulator.o \
    obj/zerocoin/AccumulatorProofOfKnowledge.o \
    obj/zerocoin/Coin.o \
    obj/zerocoin/CoinSpend.o \
    obj/zerocoin/Commitment.o \
    obj/zerocoin/ParamGeneration.o \
    obj/zerocoin/Params.o \
    obj/zerocoin/SerialNumberSignatureOfKnowledge.o \
    obj/zerocoin/SpendMetaData.o \
    obj/zerocoin/ZeroTest.o

all: iocoind.exe

LIBS += $(CURDIR)/leveldb/libleveldb.so $(CURDIR)/leveldb/libmemenv.a
DEFS += $(addprefix -I,$(CURDIR)/leveldb/include/)
DEFS += $(addprefix -I,$(CURDIR)/leveldb/helpers)
OBJS += obj/txdb-leveldb.o
leveldb/libleveldb.a:
	cd leveldb; make; cd ..
obj/txdb-leveldb.o: leveldb/libleveldb.a

obj/%.o: %.cpp $(HEADERS)
	$(CXX) -c $(CFLAGS) -o $@ $<

obj/%.o: %.c $(HEADERS)
	$(CC) -c $(CFLAGS) -o $@ $<

obj/zerocoin/%.o: zerocoin/%.cpp
	$(CXX) -c $(CFLAGS) -o $@ $<

iocoind.exe: $(OBJS:obj/%=obj/%)
	$(CXX) $(CFLAGS) $(LDFLAGS) -o $@ -static $(LIBPATHS) $^ $(LIBS)

clean:
	-del /Q iocoind
	-del /Q obj\*
	-del /Q obj\zerocoin\*

FORCE:
